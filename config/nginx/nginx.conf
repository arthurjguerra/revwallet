user nginx;
worker_processes auto;

error_log /tmp/error.log warn;
#pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    client_body_temp_path /tmp/client_body_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    root /usr/share/nginx/www;
    index revwallet.html;

    log_format json_analytics escape=json '{'
        '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
        '"connection": "$connection", ' # connection serial number
        '"connection_requests": "$connection_requests", ' # number of requests made in connection
        '"pid": "$pid", ' # process pid
        '"request_id": "$request_id", ' # the unique request id
        '"request_length": "$request_length", ' # request length (including headers and body)
        '"remote_addr": "$remote_addr", ' # client IP
        '"remote_user": "$remote_user", ' # client HTTP username
        '"remote_port": "$remote_port", ' # client port
        '"time_local": "$time_local", '
        '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
        '"request": "$request", ' # full path no arguments if the request
        '"request_uri": "$request_uri", ' # full path and arguments if the request
        '"args": "$args", ' # args
        '"status": "$status", ' # response status code
        '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
        '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
        '"http_referer": "$http_referer", ' # HTTP referer
        '"http_user_agent": "$http_user_agent", ' # user agent
        '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
        '"http_host": "$http_host", ' # the request Host: header
        '"server_name": "$server_name", ' # the name of the vhost serving the request
        '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
        '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
        '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
        '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
        '"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body
        '"upstream_response_length": "$upstream_response_length", ' # upstream response length
        '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
        '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
        '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
        '"scheme": "$scheme", ' # http or https
        '"request_method": "$request_method", ' # request method
        '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
        '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
        '"gzip_ratio": "$gzip_ratio"'
        '}';

    access_log /tmp/json_access.log json_analytics;

    sendfile on;
    keepalive_timeout 65;

    include /etc/nginx/conf.d/*.conf;

    # This is required to proxy Grafana Live WebSocket connections.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream grafana {
        server grafana:3000;
    }

    upstream prometheus {
        server prometheus-server:80;
    }

    upstream revwallet-api {
        server revwallet-api:5000;
    }

    server {
        listen 8080;
        server_name _;
        error_page 404 /404.html;

        location = /404.html {
            root /opt/bitnami/nginx/html/;
            internal;
        }

        location / {
            root /opt/bitnami/nginx/html/;
            index revwallet.html;
            try_files $uri $uri/ =404;
        }

        location /wallet {
            auth_basic off;
            proxy_pass http://revwallet-api/wallet/;
        }

        location /metrics {
            auth_basic off;
            proxy_pass http://revwallet-api/metrics/;
        }

        location /prometheus/ {
            auth_basic "Restricted Access";
            auth_basic_user_file /tmp/.htpasswd;
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect / /prometheus/;
        }

        # Admin paths
        # location /grafana/ {
        #     auth_basic "Restricted Access";
        #     auth_basic_user_file /tmp/.htpasswd;
        #     proxy_set_header Host $host;
        #     proxy_pass http://grafana/;
        # }

        # Proxy Grafana Live WebSocket connections.
        # location /grafana/api/live/ {
        #     auth_basic "Restricted Access";
        #     auth_basic_user_file /tmp/.htpasswd;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection $connection_upgrade;
        #     proxy_set_header Host $host;
        #     proxy_pass http://grafana/;
        #     proxy_redirect http://grafana/ /grafana/;
        # }
    }
}
