services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./config/loki/loki-config.yaml:/etc/loki/local-config.yaml
    # ports:
    #   - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - revwallet_network
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    volumes:
      - ./config/alloy/config.alloy:/etc/alloy/config.alloy
      - ./logs/revwallet:/var/log/revwallet
      - ./logs/nginx:/var/log/nginx
    # ports:
    #   - "12345:12345"
    command: [
      "run",
      "--server.http.listen-addr=0.0.0.0:12345",
      "--storage.path=/var/lib/alloy/data",
      "/etc/alloy/config.alloy",
    ]
    networks:
      - revwallet_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
      alloy:
        condition: service_started
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ./config/grafana/provisioning.yaml:/etc/grafana/provisioning/dashboards/provisioning.yaml
      - ./config/grafana/data-sources.yaml:/etc/grafana/provisioning/datasources/data-sources.yaml
      - ./config/grafana/dashboard.json:/etc/grafana/dashboards/dashboard.json
    # ports:
    #   - "3000:3000"
    networks:
      - revwallet_network
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://admin:admin@localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'
    # ports:
    #   - "9090:9090"
    networks:
      - revwallet_network
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9090"]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s

  revwallet-db:
    image: postgres:latest
    container_name: revwallet-db
    environment:
      POSTGRES_USER: revwallet
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: revwallet
    # ports:
    #   - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - revwallet_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d revwallet -U revwallet"]
      interval: 10s
      timeout: 5s
      retries: 5

  revwallet-api:
    image: arthurjguerra18/revwallet:${GITHUB_SHA:-test}
    container_name: revwallet-api
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      revwallet-db:
        condition: service_healthy
    environment:
      DB_USERNAME: revwallet
      DB_PASSWORD: mypassword
      DB_NAME: revwallet
      DB_HOST: revwallet-db
    # ports:
    #   - "5000:5000"
    networks:
      - revwallet_network
    links:
      - revwallet-db
    volumes:
      - ./logs/revwallet:/var/log/revwallet

  nginx:
    image: docker.io/bitnami/nginx:1.27.1-debian-12-r0
    container_name: nginx
    volumes:
      - ./config/nginx/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf
      - ./config/nginx/revwallet.html:/opt/bitnami/nginx/html/revwallet.html
      - ./config/nginx/404.html:/opt/bitnami/nginx/html/404.html
      - ./logs/nginx:/tmp/nginx
    ports:
      - "8080:8080"
    networks:
      - revwallet_network
    depends_on:
      revwallet-api:
        condition: service_started
      prometheus:
        condition: service_healthy
      grafana:
        condition: service_healthy

networks:
  revwallet_network:
    driver: bridge

volumes:
  db_data:
